"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from dotenv import load_dotenv
from pathlib import Path
import os
from datetime import timedelta

#Load environment variables from the .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False') == 'True'
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'django.contrib.sites',
    "rest_framework",
    'rest_framework.authtoken',
    'rest_framework_simplejwt.token_blacklist',
    'dj_rest_auth', 
    'dj_rest_auth.registration', 
    'allauth', 
    'allauth.account',
    'allauth.socialaccount',
    'corsheaders',
    "anymail",
    "members"
]

# django-allauth is a Django library for handling user authentication and registration in a comprehensive and simple way.
# Obligation linked to allauth, it is used to say that I use site nÂ°1 which will be the only site
SITE_ID = 1

AUTH_USER_MODEL = 'members.User'

DJANGO_REST_AUTH = {
    # Path to serializers
    'REGISTER_SERIALIZER': 'members.serializers.CompleteUserSerializer',
}

# Allows you to replace Allauth's default behavior with your own class
ACCOUNT_ADAPTER = 'members.adapters.FrontendResetAdapter'
# Define a FRONTEND URL variable that will be used in your FrontEndResetAdapter to build custom URLs
FRONTEND_URL = os.getenv("FRONTEND_URL", "http://localhost:3000")

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}

MIDDLEWARE = [
    # Placed first to avoid cors errors
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv('MYSQL_DATABASE'),
        "USER": os.getenv('MYSQL_USER'),
        "PASSWORD": os.getenv('MYSQL_PASSWORD'),
        "HOST": os.getenv('MYSQL_HOST'),
        "PORT": os.getenv('MYSQL_PORT'),
    }
}

# for have the username not mandatory for create a user
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_EMAIL_VERIFICATION = "none"

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

SIMPLE_JWT = { 
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=14),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Token',),
}

# Lists the origins that are allowed to make requests to the backend API
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:5173",
    "http://localhost:5173",
]

# Specify which HTTP headers are allowed to be sent in a CORS request
CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'x-requested-with',
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Email settings (with Mailgun)

# Tells Django to use Mailgun via the HTTP API, using the backend provided by django-anymail.
EMAIL_BACKEND = "anymail.backends.mailgun.EmailBackend"
# Sets the default sender email address for all sent emails.
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL")

# Specific configuration for the Mailgun backend
ANYMAIL = {
    # This is the Mailgun secret API key to send emails via the API
    "MAILGUN_API_KEY": os.getenv("MAILGUN_API_KEY"),
    # Mailgun domain authorized to send emails on your behalf.
    "MAILGUN_SENDER_DOMAIN": os.getenv("MAILGUN_DOMAIN"),
}

ACCOUNT_EMAIL_TEMPLATE_PATH = 'account/email'
